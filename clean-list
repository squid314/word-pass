#!/bin/sh
# not in love with this pattern, but it doesn't work as well as a script without it
exec scala "$0" "$0" "$@"
!#

import scala.io.Source
import java.io.PrintWriter
import java.nio.file.{FileSystems,Files,OpenOption}
import java.nio.charset.StandardCharsets
import java.text.Normalizer

// main app
object Cleaner {
    def main(args: Array[String]): Unit = args match {
        case Array(name, input, output) => cleanUp(input, output)
        case Array(name, _ @ _*) => println(s"""invalid args!
Usage: $name <input-file> <output-file>""")
        case _ => println("help, i'm broken")
    }

//    def input(s: String): Source = Source.fromFile(s)
//    def output(s: String): (String) => Unit = new PrintWriter(new File(s)).println(_:String)

    def cleanUp(input: String, output: String): Unit = {
        val outpath = FileSystems.getDefault().getPath(output)
        val outwriter = new PrintWriter(Files.newBufferedWriter(outpath, StandardCharsets.UTF_8, Array[OpenOption]() : _*))
        Source.fromFile(input)
            .getLines
            .to(LazyList)
            .filterNot(_.startsWith("#"))
            .filterNot(_.charAt(0).isUpper)
            .filter(s => !".' ".exists(s contains _))
            .map(_.toLowerCase)
            .filter(s => Normalizer.normalize(s, Normalizer.Form.NFD) == s)
            .filter(_.length >= 4)
            .distinct
            .foreach(outwriter.println)
        outwriter.flush()
    }
}

// vi: set ts=4 sts=4 sw=4 et ft=scala :
